/**
 * Copyright (C) 2014 Xillio (support@xillio.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Specification: sort MUST sort a collection correctly, based on the given parameters.
 * Input: Various unsorted lists and objects
 * Expected: The collections correctly sorted
 */

use Assert, Collection;

var simpleList = [ "b", "a", "c" ];
var simpleObject = { 1: "c", 0: "b", 2: "a" };
var nestedList = [ "b", [ "c", "a" ] ];
var nestedObject = { 0: "c", 1: { 2: "b", 3: "a" } };

// Default.
Assert.equal(Collection.sort(simpleList), [ "a", "b", "c" ]);
Assert.equal(Collection.sort(simpleObject), { 2: "a", 0: "b", 1: "c" });

// Recursive.
Assert.equal(Collection.sort(nestedList, true), [ [ "a", "c" ], "b" ]);
Assert.equal(Collection.sort(nestedObject, true), { 1: { 3: "a", 2: "b" }, 0: "c" });

// On keys.
Assert.equal(Collection.sort(simpleList, false, true), simpleList);
Assert.equal(Collection.sort(simpleObject, false, true), { 0: "b", 1: "c", 2: "a" });

// Reverse.
Assert.equal(Collection.sort(simpleList, false, false, true), [ "c", "b", "a" ]);
Assert.equal(Collection.sort(simpleObject, false, false, true), { 1: "c", 0: "b", 2: "a" });