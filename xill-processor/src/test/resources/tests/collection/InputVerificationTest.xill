/**
 * Copyright (C) 2014 Xillio (support@xillio.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Specification: The parameters get verified for invalid combinations and MUST throw an error if the combination is invalid
 * Input: See input variable
 * Expected: Errors thrown for each input
 */
use Collection, Assert;
var input = [
    [0,0,null], // Start and end may not be the same
    [100, 100000, -0.1], // Negative step for ascending range
    [1, -100000, 1], // Positive step for descending range
    [0, 10, 0] // Step variable is zero
];

foreach(value in input) {
    do {
        var iterator = Collection.range(value[0], value[1], value[2]);
    } success {
        Assert.error("The range construct should throw an error for invalid user input for the following input: \n
    start: " :: value[0] :: ", end: " :: value[1] :: ", step: " :: value[2]);
    }
}