/**
 * Copyright (C) 2014 Xillio (support@xillio.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Specification: Date.parse MUST parse a (optional) string date with an optional format and optional locale and return a Date 
 * Input: 
    [
        [NOTHING vs Date.now],
        [A date, format and local "en-US" vs A date, format and no local (default)],
        [A date, format and local "en-US" vs A date, format and local "nl-NL"]
    ]
 * Expected: 
    [
        The same date,
        The same date,
        The same date
    ]
 */
 use Assert, Date;

parseDefault();
parseSameLocaleAsDefault();
parseDifferentLocals();

function parseDefault() {
    var date1 = Date.parse();
    var date2 = Date.now();
    Assert.isTrue(Date.diff(date1, date2, true).totalMillis < 30, "Date.parse does not provide the current date as default.");
}

function parseSameLocaleAsDefault() {
    var date1 = Date.parse("Monday August 2016 13:37", "EEEE MMMM yyyy HH:mm", "en-US");
    var date2 = Date.parse("Monday August 2016 13:37", "EEEE MMMM yyyy HH:mm");
    Assert.isTrue(Date.isDate(date1), "Date.parse with locale 'en-US' does not return a Date");
    Assert.isTrue(Date.isDate(date2), "Date.parse with locale set to default does not return a Date");
    Assert.equal(date1, date2, "The default local is not equal to 'en-US', which should be");
}

function parseDifferentLocals() {
    var date1 = Date.parse("zaterdag december 1990 23:59", "EEEE MMMM yyyy HH:mm", "nl-NL");
    var date2 = Date.parse("Saturday December 1990 23:59", "EEEE MMMM yyyy HH:mm", "en-US");
    Assert.isTrue(Date.isDate(date1), "Date.parse with locale 'en-US' does not return a Date");
    Assert.isTrue(Date.isDate(date2), "Date.parse with locale 'nl-NL' does not return a Date");
    Assert.equal(date1, date2, "The date with local 'nl-NL' and the same date with local 'en-US' are not the same");
}