<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
Throws an error if `requiredVersion` is not supported in the current version of the language.
    </description>
	<parameterDescriptions>
		<parameterDescription parameterName="requiredVersion">
The version that will be checked.
        </parameterDescription>
	</parameterDescriptions>
	<longDescription>
Will return the current version of the language if the provided version is supported or if left empty.
	</longDescription>
    <examples>
        <example title="Usage">
            <header>Print the current version of the language</header>
            <code>

                use System;

                var currentVersion = System.version();
                System.print(currentVersion); //the latest version of the language is printed

            </code>
        </example>
        <example>
            <header>Check if a version is supported in the current version of the language</header>
            <code>
                use System;

                /*
                the provided version is supported. The latest version of the language is printed.
                */
                var supportedVersion = System.version(3.0);
                System.print(supportedVersion);

                /*
                the provided version is not supported.
                the error 'Version &lt;provided_version&gt; is not supported in &lt;current_version&gt;' is thrown.
                'null' is printed.
                */
                var notSupportedVersion = System.version(99.0);
                System.print(notSupportedVersion);

            </code>
        </example>
    </examples>
    <searchTags>
        version, check, error
    </searchTags>
</function>