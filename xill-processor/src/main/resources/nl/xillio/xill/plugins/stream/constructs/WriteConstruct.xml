<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
Write content to an output stream.
    </description>
	<parameterDescriptions>
		<parameterDescription parameterName="source">
If the `source` parameter contains binary data, consume that data.
Otherwise the string value of the source parameter will be written to the `target` stream.
        </parameterDescription>
		<parameterDescription parameterName="target">
The stream that will be writen to.
        </parameterDescription>
		<parameterDescription parameterName="limit">
The amount of bytes written to the stream.
If set to -1 all bytes will be written, this is the default.
        </parameterDescription>
		<parameterDescription parameterName="outputCharset">
The character set that will be used to write to the stream.
When this is null, the default character set is used. 
        </parameterDescription>
		<parameterDescription parameterName="inputCharset">
The character set that will be used to read from the source.
When this is null, the default character set is used. 
        </parameterDescription>
	</parameterDescriptions>
	<longDescription>
When the `source` parameter is a string, the inputCharset is ignored.
	</longDescription>
    <examples>
        <example title="Usage">
            <header>Write 3 lines to a file</header>
            <code>
                use File, Stream;

                var target = File.openWrite("./target.txt");

                Stream.write("Hello World\n", target);
                Stream.write("Hello World\n", target);
                Stream.write("Hello World\n", target);
            </code>
            <header>Copy a file</header>
            <code>
                use File, Stream;

                var source = File.openRead("./source.txt");
                var target = File.openWrite("./source-copy.txt");
                Stream.write(source, target);
            </code>
        </example>
    </examples>
    <references>
        <reference>File.openRead</reference>
        <reference>File.openAppend</reference>
        <reference>File.openWrite</reference>
    </references>
    <tags>
        read, write, append, text, content, create
    </tags>
</function>
