<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
Returns `true` if `text` matches the pattern specified by `regex`.
    </description>
	<parameterDescriptions>
		<parameterDescription parameterName="value">
The string that will be used.
        </parameterDescription>
		<parameterDescription parameterName="regex">
The regular expression that will be used.
        </parameterDescription>
		<parameterDescription parameterName="timeout">
The amount of time in milliseconds the construct is allowed to run (default is 5000).
Set timeout to zero to let the function run without timeout.
This should only be altered when dealing with large source documents, the timeout is there to protect the system from hanging on invalid expressions.
        </parameterDescription>
	</parameterDescriptions>
	<longDescription>
For more information about regular expressions viset the [regular expression support page](https://support.xillio.com/support/solutions/articles/6000058847-regex).
	</longDescription>
    <examples>
        <example title="Usage">
            <code><![CDATA[
                use System;
                use String;

              	if (String.matches("I need help!", ".*help.*")) {
              	    System.print("Someone is calling for help!");
                }

		        if (String.matches("<p>paragraph text</p>", "<p\\b[^>]*>(.*?)</p>")) {
		            System.print("This text contains a paragraph.");
		        }
          ]]></code>
        </example>
    </examples>
    <searchTags>
        regex, matches
    </searchTags>
</function>