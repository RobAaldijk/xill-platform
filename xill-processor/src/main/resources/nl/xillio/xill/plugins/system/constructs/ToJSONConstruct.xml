<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
This construct parses an ATOMIC, LIST or OBJECT to a JSON string and returns it as an ATOMIC.
If the 'pretty' parameter is true then the JSON string will be pretty printed.

Note that circular references cannot be parsed and will be substituted.  

    </description>
    <examples>
        <example title="Usage">
            <code>
                use System;

                var atomic = "hello world";
                var atomicJSON = System.toJSON(atomic);
                var atomicPretty = System.toJSON(atomic, true);

                /*
                Printing these variable to console:
                atomicJSON   :"hello world"
                atomicPretty :"hello world"
                */

                var list = [1,2,"hello","world"];
                var listJSON = System.toJSON(list);
                var listPretty = System.toJSON(list, true);

                /*
                Printing these variable to console:
                listJSON   : [1,2,"hello","world"]
                listPretty : [ 1, 2, "hello", "world" ]
                */

                var object = {"a":"hello","b":"world","c":{"a":"example","b":"xillio"}};
                var objectJSON = System.toJSON(object);
                var objectPretty = System.toJSON(object, true);

                /*
                Printing these variable to console:
                objectJSON   : {"a":"hello","b":"world","c":{"a":"example","b":"xillio"}}
                objectPretty : {
                                "a" : "hello",
                                "b" : "world",
                                "c" : {
                                  "a" : "example",
                                  "b" : "xillio"
                                 }
                               }
                */
            </code>
        </example>
    </examples>
    <searchTags>
        json, string, convert, pretty
    </searchTags>
</function>