/**
 * Copyright (C) 2014 Xillio (support@xillio.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
* Specification: Unparsable values MUST throw an error when parsing
* Expected: Errors thrown
* Input: See values below
*/
use Assert, Template, String;

var options1 = {
    "strongCache" : "a"
};
var options2 = {
    "softCache" : "faultyValue"
};
var path = "ReallyNotAValidPath-aijdusa98d89wu21ijk";
var options3 = {
    "templatesDirectory" : "./" :: path
};

do {
    var engine = Template.getEngine(options1);    
} success {
    Assert.error("The construct should throw an error when given faulty values.");
}

do {
    var engine = Template.getEngine(options2);    
} success {
    Assert.error("The construct should throw an error when given faulty values.");
}

do {
    var engine = Template.getEngine(options3);    
} fail (e) {
    Assert.isTrue(String.contains(e.message, path));
} success {
    Assert.error("The construct should throw an error when given faulty values.");
}

