#*
 * Copyright (C) 2014 Xillio (support@xillio.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *#
/* Specification: Document.save should store a document exactly as-is only adding top level metadata.
 * Input: the document
 * Expected: the inserted document
 */
use Document, Assert, ContentType;

include testresources.lib.NoTestCleanup;

var identity = "IT";

// First we insert the empty content type
ContentType.save("IntegrationTest", [], identity);

var current = {
    "version": "1.0",
    "decorator": {
        "field": "Value"
    }
};

// Insert the document
var doc = Document.new("IntegrationTest", current);
Document.save(doc, identity);

// Fetch the Document
var count = 0;
foreach(document in Document.find({"_id": doc._id}, {}, identity)) {
    // We cannot match the full document since there is some additional data here
    Assert.equal(document.source.current.decorator, doc.source.current.decorator, "The retrieved document does not match");
    Assert.equal(document.target.current.decorator, doc.target.current.decorator, "The retrieved document does not match");
    Assert.equal(document.contentType, doc.contentType, "The retrieved document does not match");
    count++;
}

Assert.equal(count, 1, "Exactly one document must be found");

// Clean up
cleanupUDM(identity);
