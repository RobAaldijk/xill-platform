#*
 * Copyright (C) 2014 Xillio (support@xillio.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *#
/* 
* Specification: The function given to map is called for each item, and returns the correct result.
* Input: All types of variables, containing strings.
* Expected: The correct length of each string, in the correct order. When called on null or an empty iterable, the function is not invoked.
*/

use Assert, String;

// All types of variables.
var nullVar;
var atomic = "atomic";
var list = [ "lorem", "foo", "something" ];
var object = { "a": "true", "b": "false" };

map<shouldBeEmpty>(nullVar);
Assert.equal(collect(map<getLength>(atomic)), [ 6 ]);
Assert.equal(collect(map<getLength>(list)), [ 5, 3, 9 ]);
Assert.equal(collect(map<getLengthObject>(object)), [ 4, 5 ]);

function getLength(item) {
    return String.length(item);
}

function getLengthObject(item) {
    foreach (k, v in item) {
        return getLength(v);
    }
}

function shouldBeEmpty(item) {
    Assert.error("Iterator should be empty.");
}