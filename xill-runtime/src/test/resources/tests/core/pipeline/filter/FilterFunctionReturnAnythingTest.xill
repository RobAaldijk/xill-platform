/**
 * Copyright (C) 2014 Xillio (support@xillio.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* 
* Specification: When the function given to filter does not return a boolean, its boolean value is used.
* Input: An object which contains all types of variables, which are returned in the function.
* Expected: A list containing only entries of which the value is interpreted as boolean value true.
*/

use Assert;

var object = {
    "zero": 0,
    "one": 1,
    "string": "foo",
    "emptyString": "",
    "null": null,
    "list": [ 1, 2 ],
    "emptyList": [],
    "object": { "a": 1, "b": 2 },
    "emptyObject": {}
};
var expected = [
    { "one": 1 },
    { "string": "foo" },
    { "list": [ 1, 2 ] },
    { "emptyList": [] },
    { "object": { "a": 1, "b": 2 } },
    { "emptyObject": {} }
];

Assert.equal(collect(filter<returnAny>(object)), expected);

function returnAny(obj) {
    foreach (k, v in obj) {
        return v;
    }
}