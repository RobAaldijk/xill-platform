<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
This construct provides a convenient way to perform a query-by-example that results in a single row.
It is equivalent to executing:

    SELECT TOP 1 * FROM [table] WHERE [key=value [key=value]]

The database parameter is optional. The last made connection will be used if no database is given.
This function returns a new object with all its values.

__NOTE__: Fields with `null` values are ignored in the search of objects.
    </description>
    <examples>
        <example title="Usage">
        <header>Get an object by it's id</header>
        <code>
            use MSSQL as db, System;

            // Connect to the database
            db.connect(
                "jdbc:jtds:sqlserver://localhost/Database" ::
                ";user=MyUserName" ::
                ";password=MyPassword"
            );

            var object = db.getObject("people", {"id": 5346});

            var json = System.toJSON(object, true);
            System.print(json);
        </code>
        <header>Get an object by example</header>
        <code>
            use MSSQL as db, System;

            // Connect to the database
            db.connect(
                "jdbc:jtds:sqlserver://localhost/Database" ::
                ";user=MyUserName" ::
                ";password=MyPassword"
            );

            var example = {
                "firstName": "John",
                "lastName": "Doe"
            };

            var row = db.getObject("people", example);

            var json = System.toJSON(row, true);
            System.print(json);
        </code>
    </example>
    </examples>
    <references>
        <reference>connect</reference>
        <reference>query</reference>
        <reference>storeObject</reference>
    </references>
</function>