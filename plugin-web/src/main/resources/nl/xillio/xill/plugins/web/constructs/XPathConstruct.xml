<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
Returns a string, element or a list of elements from the specified `element`'s DOM tree matching `xPath`.
    </description>
	<parameterDescriptions>
		<parameterDescription parameterName="element">
The element that will be matched.
        </parameterDescription>
		<parameterDescription parameterName="xPath">
The xPath used for matching.
        </parameterDescription>
	</parameterDescriptions>
	<longDescription>
This function has XPath 2.0 support.

Extracting values from a web page can sometimes give you a value that differs from the actual page's source. This
happens because the software that is reading the URL is a real browser. This means that processing is done on the
resulting DOM tree after loading the page, and not on the source HTML page.

Keep in mind that the results returned by the `xPath` construct may be updated by javascript that is executed when the page 
is loaded. This also is the case for relative URL's that are found on a page. When the browser sees a relative URL, its current 
value will be prefixed with the URL of the loaded page. See the code example below.

For more information about the xPath syntax and available xPath functions look here:
[w3schools XPath manual] (http://www.w3schools.com/xml/xpath_intro.asp)
	</longDescription>
    <examples>
        <example title="Usage">
            <header>Use xPath to extract an element from a web page</header>
            <code>
                use Web;
                use System;

                var page = Web.loadPage ("http://www.xillio.com");
                var links = Web.xPath(page, "//img");

                foreach(_,link in links) {
                    var url = Web.xPath(link, "./@src");
                    // If the url is relative it will be
                    // prefixed with "http://www.xillio.com/"
                    System.print(url);
                }
            </code>
        </example>
    </examples>
    <references>
        <reference>loadPage</reference>
    </references>
    <tags>
        load, page, web, xpath, filter, match
    </tags>
</function>