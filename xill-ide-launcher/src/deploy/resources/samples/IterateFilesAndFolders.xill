/**
 * Copyright (C) 2014 Xillio (support@xillio.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
Author:     Xillio
Modified:   26-8-2016

Description:
        This robot iterates all files and folders in a current user home folder (e.g. c:\Users\John).
*/
use File, System, String;
   
var extensions = {};
var level = 0;
  
var folders = File.iterateFolders(System.properties("user.home"));
foreach(folder in folders) {
    printFolderName(folder, level);
    if (folder.isAccessible) {
         listFiles(folder.path, level + 1);
    } else {
         System.print(String.repeat("    ", level + 1) :: "Cannot access folder ":: folder.path);
    }
}
  
//prints the folder name indented by level
function printFolderName(folder, level) {
    System.print(String.repeat("    ", level) :: folder.path :: ": ");
}
  
//prints the file name and creation date indented by level
function printFileName(file, level) {
    var fileName = getFileName(file);
    if (fileName != null) {
        System.print(String.repeat("    ", level) :: fileName :: " (" :: File.getCreationDate(file) :: ")");
    } else {
        System.print("An error occured getting name of file: " :: file);
    }
}
  
//removes the path from file, returns only the filename
function getFileName(file) {
    var match = String.regex(file, "^.*[/\\\\](.*?)$");
    if (match != null) {
        return match[1];
    } else {
        return null;
    }
}
  
//prints an overview of all files in path recursively
function listFiles (path, level) {
     foreach (file in File.iterateFiles(path)) {
         if (File.isFolder(file)) {
             listFiles(file, level + 1);
         } else {
             printFileName(file, level);
         }
     }
}