/**
 * Copyright (C) 2014 Xillio (support@xillio.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
Author:     Xillio
Modified:   7-9-2015

Description:
        Automate generating ransom notes. This robot downloads an image for each character in a string from Flickr.
*/
use String, System, Web, Math, Collection, XML, Date, XURL;

// ---------------------------------------------
// SETTINGS
// ---------------------------------------------
// update for your local environment

var downloadFolder = "C:/temp";
var ransomNote = "Welcome to Xill IDE";

// flickr api keys periodically expire. If needed please create your own at https://www.flickr.com/services/api/misc.api_keys.html
var api_key = "18f8ba1a55f0a3a211c210a2f846ae83";

// ---------------------------------------------
// MAIN
// ---------------------------------------------

var ransomNoteChars = String.split(ransomNote,"");
var index = 0;

// Flickr group ID
var standardGroupid = "27034531%40N00";
var groupid;

// Create a subfoldername
var date = Date.now();
var folderDate = Date.format(date,"yyyyMMddhhmmss");
downloadFolder = downloadFolder ::"/ransom/":: folderDate ::"/";

foreach(item in ransomNoteChars){
	index = index+1;
	var currentChar = item;
	var flickrParameter = currentChar;
	if(currentChar == " ") {
	    // Replace spaces with something else
		flickrParameter = "retro+robot";
		groupid = "";
	}
    else {
        groupid = standardGroupid;
	}
	// perform the search using the flickr REST api
	var flickrUrl = "https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=" :: api_key :: "&text=" :: flickrParameter :: "&sort=relevance&group_id=" :: groupid :: "&format=rest";
	var response = XURL.get("https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=" :: api_key :: "&text=" :: flickrParameter :: "&sort=relevance&group_id=" :: groupid :: "&format=rest", {"timeout" : 10000});
	// check for errors
	var err = XML.xPath(response.body,"//rsp/err/@msg");
	if(err != null){
	    System.print("Error: " :: err);
	} else {
    	var flickrUsers = XML.xPath(response.body, "//rsp//photo/@owner");
    	var flickrPhotoIds = XML.xPath(response.body, "//rsp//photo/@id");
    	var numberofResults = Collection.length(flickrUsers);
    	var randomNumber = (Math.random (numberofResults));
    	
    	// extract the photo attributes
    	var photoOwner = XML.xPath(response.body, "//rsp//photo["::randomNumber::"]/@owner");
    	var photoId = XML.xPath(response.body, "//rsp//photo["::randomNumber::"]/@id");
    	var photoPageUrl = "http://www.flickr.com/photos/"::photoOwner::"/"::photoId::"/sizes/q";
    	var photoPage = Web.loadPage(photoPageUrl);
    	var photoDiv = Web.xPath(photoPage, "//div[contains(@id, 'allsizes-photo')]");
    	var photoUrl = Web.xPath(photoDiv, "./img/@src");
    	
    	// download photo to local filesystem
    	var downloadLocation = downloadFolder :: index :: currentChar :: ".jpg";
    	if(photoUrl != null) {
    		System.print("Downloading image for "::flickrParameter::": "::photoUrl);
    		Web.download (photoUrl,downloadLocation);
    	}	    
	}
}

System.print("Woohoo, check ":: downloadFolder ::" for the results.");