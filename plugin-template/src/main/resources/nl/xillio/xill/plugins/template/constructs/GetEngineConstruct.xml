<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
The Template plugin uses the Freemarker _templating engine_ to generate text output based on templates and changing
data. This construct parses the given options parameter and returns a configured templating engine (or engine for short)
that is ready for use.
    </description>
	<parameterDescriptions>
		<parameterDescription parameterName="options">
The options parameter is an object that can be used to configure the templating engine:

| Option               | Values                                                                          | Description                                                                                                                              | Default    |
|----------------------|---------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------|------------|
| templatesDirectory   | An ATOMIC containing a relative path from the project root or an absolute path. | The directory containing template files that can be used with this engine.                                                               | "."        |
| encoding             | An ATOMIC containing a string.                                                  | This sets the encoding for the template that is provided in the process-construct.                                                       | "UTF-8"    |
| noCaching            | An ATOMIC containing a boolean.                                                 | Disabling the caching will lead to decreased performance but it will optimize the memory footprint.                                      | false      |
| strongCache          | An ATOMIC containing a number (from 0 to 2147483647).                           | This number instructs the engine to keep the specific number of hard references to templates. A hard reference is not garbage collected. | 0          |
| softCache            | An ATOMIC containing a number (from 0 to 2147483647).                           | This number instructs the engine to keep the specific number of soft references to templates. A soft reference can be garbage collected. | 2147483647 |

The caching options are intended to be used in special cases, when there are performance issues or resourcing problems.
If you have a lot of templates and a specific number of those templates is used a lot, increase the `strongCache`
option to avoid that these most used templates are removed from memory after a while (garbage collect). The engine will
then place the most used templates in the `strongCache` where they will not be garbage collected.
When you run into specific memory problems, you can consider to disable the caching by setting the `noCaching` option to
true. When the `noCaching` option is set to true, the `strongCache` and `softCache` options are ignored.
        </parameterDescription>
	</parameterDescriptions>
	<longDescription>
It is not required to first initialize the engine before processing templates and data. If the engine in not
initialized, it will create a new default engine.

This plugin uses a third-party library named FreeMarker to process the templates. For more information please check
their [website](http://freemarker.org/docs/index.html).
	
When encountering charset or encoding issues please read the
[FreeMarker documentation](http://freemarker.org/docs/pgui_misc_charset.html) on this.
	</longDescription>
    <examples>
        <example title="Get the default engine">
            <header>
                This returns an engine with its default settings (A.K.A. a default engine). This means the
                engine will search the project root directory for tempate files.
            </header>
            <code>
                use Template;

                var config = Template.getEngine();
            </code>
        </example>
        <example title="Specify more options">
            <header>
                This returns an engine with given options.
            </header>
            <code>
                use Template;

                var options = {
                    "templatesDirectory" : "C:/templates",
                    "strongCache" : 10,
                    "softCache" : 250,
                    "encoding" : "UNICODE"
                };

                var config = Template.getEngine(options);
            </code>
        </example>
    </examples>
    <references>
        <reference>process</reference>
    </references>
    <tags>
        template, freemarker, configuration
    </tags>
</function>
