<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
This construct parses given options and returns the engine for the template plugin.

The options object is optional which results in using the default engine which is build up with the following options:

        var options = {
            "templatesDirectory" : ".", // Project root
            "encoding" : "UTF-8",
            "strongCache" : 0,
            "softCache" : 2147483647, // Max integer
            "logTemplateExceptions" : true
        };

    </description>
    <examples>
        <example title="Get the default engine">
            <header>
                This returns an engine with the templates directory pointed to the project root.
            </header>
            <code>
                use Template;

                var config = Template.getEngine();
            </code>
        </example>
        <example title="Specify templates directory">
            <header>
                This returns a default engine with the templates directory specified to the given input.
            </header>
            <code>
                use Template;

                var options = {
                    "templatesDirectory" : "C:/templates"
                };

                var config = Template.getEngine(options);
            </code>
        </example>
        <example title="Do not cache templates">
            <header>
                This returns a template engine that does not cache the used templates.
                This does decrease performance, but also its memory usage.
            </header>
            <code>
                use Template;

                var options = {
                    "noCache" : true
                };

                var config = Template.getEngine(options);
            </code>
        </example>
        <example title="Specify more options">
            <header>
                This returns an engine with given options.
            </header>
            <code>
                use Template;

                var options = {
                    "templatesDirectory" : "C:/templates",
                    "strongCache" : 10,
                    "softCache" : 250,
                    "encoding" : "UNICODE",
                    "logTemplateExceptions" : false
                };

                var config = Template.getEngine(options);
            </code>
        </example>
    </examples>
</function>
