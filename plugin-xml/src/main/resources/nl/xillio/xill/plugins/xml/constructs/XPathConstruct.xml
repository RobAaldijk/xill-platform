<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
Returns a string, XML node or a list of XML nodes from the specified XML node as indicated by the string XPath locator.
    </description>
	<parameterDescriptions>
		<parameterDescription parameterName="element">
The XML-node that will be used.
        </parameterDescription>
		<parameterDescription parameterName="xPath">
The location of the object.
        </parameterDescription>
		<parameterDescription parameterName="namespaces">
The optional namespace that will be used.
        </parameterDescription>
	</parameterDescriptions>
	<longDescription>
When querying for attributes using `@`, there are two possible scenarios:

| Scenario             | Return Value |
|----------------------|--------------|
| one single result    | `ATOMIC` containing the attribute value |
| multiple results     | `LIST` containing the attribute values |

When querying for all attributes using `@*`, there are again two possible scenarios:

| Scenario               | Return Value |
|------------------------|--------------|
| one single tag matches | `LIST` with a single `OBJECT` containing the name(s) of the matching attributes and their values |
| multiple results       | `LIST` of `OBJECT`s  containing the name(s) of the matching attributes and their values |

For more information about the XPath syntax and available xPath functions look here: [w3schools XPath manual](http://www.w3schools.com/xsl/xpath_intro.asp)
	</longDescription>
    <examples>
        <example title="Usage">
            <header>Assuming we have an XML file note.xml which contains the following:</header>
            <code>
                <![CDATA[
                    <note id="1">
                      <to>Tove</to>
                      <from>Jani</from>
                      <heading>Reminder</heading>
                      <comment>This was sent to James as well</comment>
                      <comment>John has not responded to the invitation</comment>
                      <body>Don't forget me this weekend!</body>
                    </note>
                ]]>
            </code>
            <header>After executing the following code:</header>
            <code>
                use System;
                use XML;

                var note = XML.fromFile("C:/tmp/note.xml");
                var body = XML.xPath(note, "//body");
                System.print(XML.toString(body));
            </code>
            <header>
                It will show:
            </header>
            <code>
                &lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;body&gt;Don't forget me this weekend!&lt;/body&gt;
           </code>
        </example>
        <example>
            <header>Example of a query for an attribute</header>
            <code>
                <![CDATA[
                    use XML, System ;

                    var xml = XML.fromString("
                    <Root>
                        <Pants shape=\"square\"/>
                        <Shirt shape=\"square\"/>
                    </Root>");

                    System.print(XML.xPath(xml, "//Pants/@shape", {})) ;

                    System.print(XML.xPath(xml, "//@shape", {})) ;

                    System.print(XML.xPath(xml, "//@*", {})) ;
                ]]>
            </code>
            <header>
                Output:
            </header>
            <code>
                square

                [
                    "square",
                    "square"
                ]

                [
                    {
                        "shape" : "square"
                    },
                    {
                        "shape" : "square"
                    }
                ]
            </code>
        </example>
    </examples>
    <references>
        <reference>xsdCheck</reference>
    </references>
	    <tags>
        xPath, select, selector, XML, node
    </tags>
</function>