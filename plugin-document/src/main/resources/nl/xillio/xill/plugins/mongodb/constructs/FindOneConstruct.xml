<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
Finds a single document that matches the specified `query`.
    </description>
	<parameterDescriptions>
        <parameterDescription parameterName="collectionName">
The name of the collection that will be used.
        </parameterDescription>
		<parameterDescription parameterName="query">
The query that will be applied.
        </parameterDescription>
		<parameterDescription parameterName="projection">
The field that will be included/excluded.
        </parameterDescription>
		<parameterDescription parameterName="sort">
How the results will be sorted.
        </parameterDescription>
		<parameterDescription parameterName="options">
Several options can be set here.
        </parameterDescription>
		<parameterDescription parameterName="database">
The database that will be used.
        </parameterDescription>
    </parameterDescriptions>
	<longDescription>
If multiple documents match the query, the first document in the result will be returned.
If no documents match the `query` it will return `null`.

More information about MongoDB findOne can be found in the [MongoDB manual](https://docs.mongodb.com/v3.2/reference/method/db.collection.findOne/).
	</longDescription>
    <examples>
        <example title="Usage">
            <header>Get the first document in the documents collection</header>
            <code>
                use Mongo;
                use System;
                Mongo.connect("udm_default");

                var document = Mongo.findOne("documents");

                System.print(document);
            </code>
            <header>Get a the newest document</header>
            <code>
                use Mongo;
                use System;
                Mongo.connect("udm_default");

                // Sort by timestamp (newest first).
                var sort = {
                    "target.timestamp": -1
                };

                var document = Mongo.findOne("documents", {}, {}, sort);

                System.print(document);
            </code>
        </example>
    </examples>
    <references>
        <reference>connect</reference>
        <reference>find</reference>
        <reference>delete</reference>
        <reference>update</reference>
        <reference>findOneAndDelete</reference>
        <reference>findOneAndReplace</reference>
        <reference>findOneAndUpdate</reference>
    </references>
    <tags>
        mongodb, query, search, fields, filter
    </tags>
</function>
