<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
Modifies existing documents in a collection.
    </description>
	<parameterDescriptions>
        <parameterDescription parameterName="collectionName">
The name of the collection that will be used.
        </parameterDescription>
		<parameterDescription parameterName="query">
The Query that will be applied.
        </parameterDescription>
		<parameterDescription parameterName="update">
The update that will be applied.
        </parameterDescription>
		<parameterDescription parameterName="options">
The `options` parameter may contain the following option:

| Option   | Description |
| -------- | ----------- |
| `upsert` | If set to `true`, creates a new document if no document matches the query, or if documents match the query, performs an update. To avoid multiple upserts, ensure that the query fields are uniquely indexed. The default is `false`. |

        </parameterDescription>
		<parameterDescription parameterName="database">
The database that will be used.
        </parameterDescription>
    </parameterDescriptions>
	<longDescription>
The method can modify specific fields of an existing document or documents or replace an existing document entirely, depending on the update parameter.
Returns the amount of modified documents. Will return 0 when no documents were modified or a Mongo server prior to version 2.6 is used.

More information about MongoDB update can be found in the [MongoDB manual](https://docs.mongodb.com/v3.2/reference/method/db.collection.update/).
	</longDescription>
    <examples>
        <example title="Usage">
            <header>Update all documents in the assets collection</header>
            <code>
                use Mongo;
                use System;
                Mongo.connect("udm_default");

                var update = {
                    "$set": { "contenttype": "asset" }
                };

                var result = Mongo.update("assets", {}, update);

                System.print("Updated " :: result :: " documents.");
            </code>
        </example>
    </examples>
    <references>
        <reference>connect</reference>
        <reference>remove</reference>
        <reference>insert</reference>
        <reference>find</reference>
        <reference>findOneAndUpdate</reference>
    </references>
    <tags>
        mongodb, query, update, filter
    </tags>
</function>
