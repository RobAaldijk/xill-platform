<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
Replaces a document.
    </description>
	<parameterDescriptions>
        <parameterDescription parameterName="collectionName">
The name of the collection that will be used.
        </parameterDescription>
		<parameterDescription parameterName="query">
The query that will be applied.
        </parameterDescription>
		<parameterDescription parameterName="replacement">
The document that will replace the found document.
        </parameterDescription>
		<parameterDescription parameterName="options">
The `options` parameter may contain the following options:

| Option   | Description |
| -------- | ----------- |
| `upsert` | If set to `true`, creates a new document if no document matches the query, or if a document matches the query, performs an update. The default is `false`. |
        </parameterDescription>
		<parameterDescription parameterName="database">
The database that will be used.
        </parameterDescription>
    </parameterDescriptions>
	<longDescription>	
More information about MongoDB replaceOne can be found in the [MongoDB manual](https://docs.mongodb.com/v3.2/reference/method/db.collection.replaceOne/).
	</longDescription>
    <examples>
        <example title="Usage">
            <header>Replace first document found with author John</header>
            <code>
                use System, Mongo;
                Mongo.connect("udm_default");

                // Set contenttype to postcard
                var query = { "author" : "John"};
                var replacement = { "author" : "John", "contenttype" : "postcard" };

                Mongo.replaceOne("documents", query, replacement);
            </code>
        </example>
    </examples>
    <references>
        <reference>connect</reference>
        <reference>findOneAndReplace</reference>
        <reference>updateOne</reference>
        <reference>update</reference>
    </references>
    <tags>
        mongodb, query, replacement
    </tags>
</function>
