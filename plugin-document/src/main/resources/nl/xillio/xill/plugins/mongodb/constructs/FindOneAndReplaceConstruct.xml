<?xml version="1.0" encoding="utf-8"?>
<!--

    Copyright (C) 2014 Xillio (support@xillio.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<function>
    <description>
Finds a single document using the specified `query` and `options` and replaces it with `replacement`. Also returns the document that was replaced.
    </description>
	<parameterDescriptions>
        <parameterDescription parameterName="collectionName">
The name of the collection that will be used.
        </parameterDescription>
		<parameterDescription parameterName="query">
The Query that will be applied.
        </parameterDescription>
		<parameterDescription parameterName="replacement">
The document that will replace the found document.
        </parameterDescription>
		<parameterDescription parameterName="options">
Several options can be set here.
        </parameterDescription>
		<parameterDescription parameterName="database">
The database that will be used.
        </parameterDescription>
    </parameterDescriptions>
	<longDescription>
If multiple documents match the query, the first document in the result will be replaced.
If no documents match the `query` it will return `null`.

The `options` parameter may contain the following options:

| Option       | Description |
| ------------ | ----------- |
| `projection` | A document describing the fields to return for the matching document. |
| `sort`       | A document with sort criteria to apply to the query. The default is `null`, which means that the documents will be returned in an undefined order. |
| `upsert`     | If set to `true`, creates a new document if no document matches the query, or if documents match the query, performs an update. To avoid multiple upserts, ensure that the query fields are uniquely indexed. The default is `false`. |
| `returnNew`  | If set to `true`, returns the modified document rather than the original. The default is `false`. |
| `maxTime`    | The maximum execution time in milliseconds for this operation. |

More information about MongoDB findOneAndReplace can be found in the [MongoDB manual](https://docs.mongodb.com/v3.2/reference/method/db.collection.findOneAndReplace/).
	</longDescription>
    <examples>
        <example title="Usage">
            <header>Replace the oldest document from the documents collection</header>
            <code>
                use Mongo;
                use System;
                use Date;
                Mongo.connect("udm_default");

                // The document to replace the old document with.
                var newDocument = {
                    "contenttype": "postcard",
					"timestamp": Date.now(),
					"content": "I am a postcard!"
                };

                var options = {
                    "sort": { "target.timestamp": 1 }
                };

                var result = Mongo.findOneAndReplace("documents", {}, newDocument, options);

                System.print("Replaced document with id: " :: result._id);
            </code>
        </example>
    </examples>
    <references>
        <reference>connect</reference>
        <reference>find</reference>
        <reference>delete</reference>
        <reference>update</reference>
        <reference>findOne</reference>
        <reference>findOneAndDelete</reference>
        <reference>findOneAndUpdate</reference>
    </references>
    <tags>
        mongodb, query, replace, filter
    </tags>
</function>
